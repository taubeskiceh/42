
Muster & Merksätze (für alles wiederverwendbar)

    Dereferenzieren: *p → „Inhalt an Adresse p“.

    Swap-Template: tmp = a; a = b; b = tmp; (mit * wenn über Pointer).

    Division/Rest: div = a / b; mod = a % b;

    String-Ende: while (*s) ... oder Index-Variante bis '\0'.

    Array von beiden Enden: i=0, j=size-1; while (i<j) swap(...);

    Sort-Gerüst: äußere i bis size-2, innere j ab i+1.

    Nur Gefordertes. In Turn-ins keine Tests/Includes/printf.

Teststrategie (schnell & sicher)

    Benutze deine ultra-kleine main.c mit putnbr.

    Teste Randwerte: leer/1-Element-Array, negative Zahlen, Duplikate, extremes Zeichenverhalten.

    Für String-Funktionen stets "" mitprüfen.

Typische Norm-Fehler (und Fix)

    Kommentare im Body → raus (Kommentare nur „außerhalb“ oder am Zeilenende).

    Deklaration & Init in einer Zeile → in Funktionen trennen (außer static/const).

    Zu lange Zeilen → umbrüche setzen.

    Falsche Einrückung → echte Tabs aktivieren.

    Verbotene Konstrukte → while statt for, kein ?:, keine VLAs.
